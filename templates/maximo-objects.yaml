AWSTemplateFormatVersion: '2010-09-09'
Description: 'Oracle Database Objects Template. (qs-1r4dcoihu)'
Metadata:
  cfn-lint: { config: { ignore_checks: [W9002, W9003, W9006] } }
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Amazon EC2 Configuration
        Parameters:
          - BastionASGName
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
      - Label:
          default: Oracle RDS Configuration
        Parameters:
          - DBName
          - DBUser
          - DBPassword
          - EndpointAddress
          - EndpointPort
          - MaximoFilesLocation
    ParameterLabels:
      BastionASGName:
        default: Auto Scaling Group Name of the Bastion Host
      DBName:
        default: The database name
      DBUser:
        default: The database admin account username
      DBPassword:
        default: The database admin account password
      EndpointAddress:
        default: Endpoint address of the primary database
      EndpointPort:
        default: Endpoint port number of the primary database
Parameters:
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: The S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-ibm-maximo/
    Description: The S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  MaximoFilesLocation:
    Description: Provide the S3 location of the downloaded maximo , WAS  and Oracle client files (please do not include the s3:// and the trailing forward slash).
      E.g., if the location is "s3://ibm-maximo-assets/instllation_files", then enter "ibm-maximo-assets/instllation_files".
      Refer to the deployment guide for more information on downloading the client files and obtaining the location.
    Type: String
  DBName:
    Description: The database name
    Type: String
    MinLength: '1'
    MaxLength: '8'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBUser:
    Description: The database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho: 'true'
    Description: The database admin account password
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
  BastionASGName:
    Description: Auto Scaling Group Name of the Bastion Host
    Type: String
  EndpointAddress:
    Description: Endpoint address of the primary database
    Type: String
  EndpointPort:
    Description: Endpoint port number of the primary database
    Type: String
Resources:
  QuickStartLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/Quick_Start/${AWS::StackName}-RDS_Objects'
      RetentionInDays: 30

  MaximoSSMSendCommandPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'ssm:SendCommand'
            Effect: Allow
            Resource: !Sub "arn:${AWS::Partition}:ssm:*:*:document/*"
          - Action:
              - 'ssm:SendCommand'
            Effect: Allow
            Resource: !Sub "arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"

  MaximoSSMSendCommandLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ReadOnlyAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess'
        - !Ref MaximoSSMSendCommandPolicy
  RDSSchemasConfigDocument:
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E9101
            - W1020
          ignore_reasons:
            E9101: Abort is a keyword
    Type: 'AWS::SSM::Document'
    Properties:
      DocumentType: Command
      Content:
        schemaVersion: '2.2'
        description: Create Oracle Database Tablespaces and Users
        parameters:
          QSS3BucketName:
            default: !Ref QSS3BucketName
            description: The AWS S3 Bucket Name
            type: String
          QSS3KeyPrefix:
            default: !Ref QSS3KeyPrefix
            description: The AWS S3 Key Prefix
            type: String
          MaximoFilesLocation:
            default: !Ref MaximoFilesLocation
            description: Location of Oracle client files
            type: String
          DBName:
            default: !Ref DBName
            description: The database name
            type: String
          DBUser:
            default: !Ref DBUser
            description: The database admin account username
            type: String
          DBPassword:
            default: !Ref DBPassword
            description: The database admin account password
            type: String
          EndpointAddress:
            description: Endpoint address of the primary database
            type: String
            default: !Ref EndpointAddress
          EndpointPort:
            description: Endpoint port number of the primary database
            type: String
            default: !Ref EndpointPort
          Region:
            description: Region of deployment
            type: String
            default: !Ref "AWS::Region"
        mainSteps:
          - action: 'aws:runShellScript'
            name: downloadBasicclient
            maxAttempts: 3
            onFailure: Abort
            inputs:
              runCommand:
              - !Sub 'aws s3 cp --region {{Region}} s3://{{MaximoFilesLocation}}/instantclient-basiclite-linux.x64-19.6.0.0.0dbru.zip /home/ec2-user/instantclient-basiclite-linux.x64-19.6.0.0.0dbru.zip'
              workingDirectory: '/home/ec2-user'
          - action: 'aws:runShellScript'
            name: downloadSqlclient
            maxAttempts: 3
            onFailure: Abort
            inputs:
              runCommand:
              - !Sub 'aws s3 cp --region {{Region}} s3://{{MaximoFilesLocation}}/instantclient-sqlplus-linux.x64-19.6.0.0.0dbru.zip /home/ec2-user/instantclient-sqlplus-linux.x64-19.6.0.0.0dbru.zip'
              workingDirectory: '/home/ec2-user'
          - action: 'aws:runShellScript'
            name: downloadScriptFile
            maxAttempts: 3
            onFailure: Abort
            inputs:
              runCommand:
              - !Sub 'aws s3 cp --region {{Region}} s3://{{QSS3BucketName}}/{{QSS3KeyPrefix}}scripts/maximo_oracle_commands.sh /home/ec2-user/maximo_oracle_commands.sh'
              workingDirectory: '/home/ec2-user'
          - action: 'aws:runShellScript'
            name: downloadSqlscript
            maxAttempts: 3
            onFailure: Abort
            inputs:
              runCommand:
              - !Sub 'aws s3 cp --region {{Region}} s3://{{QSS3BucketName}}/{{QSS3KeyPrefix}}scripts/maximo_oracle_database_objects.sql /home/ec2-user/maximo_oracle_database_objects.sql'
              workingDirectory: '/home/ec2-user'
          - action: 'aws:runShellScript'
            name: setFilePermissions
            maxAttempts: 3
            onFailure: Abort
            inputs:
              runCommand:
              - !Sub 'chown -R ec2-user:ec2-user /home/ec2-user ; chmod 755 /home/ec2-user/maximo_oracle_commands.sh'
              workingDirectory: '/home/ec2-user'
          - action: 'aws:runShellScript'
            name: createObjects
            maxAttempts: 3
            onFailure: Abort
            inputs:
              runCommand:
              - !Sub 'sh /home/ec2-user/maximo_oracle_commands.sh {{DBUser}} {{DBPassword}} {{EndpointAddress}} {{EndpointPort}} {{DBName}}'
              workingDirectory: '/home/ec2-user'
  ExecuteRDSSchemasDocumentLambda:
    Type: 'AWS::Lambda::Function'
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - W1020
          ignore_reasons:
            W1020: 'Keeping Fn::Sub for extensibility'
    Properties:
      Handler: index.lambda_handler
      Runtime: python3.7
      Code:
        ZipFile: !Sub |
          import boto3
          import os, time,json
          import cfnresponse
          import logging

          def lambda_handler(event, context):
          	print('Received event: %s' % json.dumps(event))
          	status = cfnresponse.SUCCESS
          	try:
          		if event['RequestType'] == 'Delete':
          			cfnresponse.send(event, context, status, {})
          		else:
          			ssm = boto3.client('ssm')

          			asg = boto3.client('autoscaling')
          			asg_name = event['ResourceProperties']['BastionASGName']
          			responseAsg = asg.describe_auto_scaling_groups(AutoScalingGroupNames=[asg_name])
          			instanceId = responseAsg['AutoScalingGroups'][0]['Instances'][0]['InstanceId']
          			ssmDocument = event['ResourceProperties']['SSMDocument']
          			responseData = {}

          			response=ssm.send_command(
          				InstanceIds = [instanceId],
          				DocumentName=ssmDocument,
          				TimeoutSeconds=3600,
          				Comment='Create maximo configurations',
          				CloudWatchOutputConfig={'CloudWatchOutputEnabled': True, 'CloudWatchLogGroupName': 'QuickStartLogs'},
          				MaxConcurrency='50',
          				MaxErrors='5',
          			)

          			cmdId = response['Command']['CommandId']
          			responseData['CommandId'] = cmdId
          			print('Started object creation in CommandId: ' + cmdId)
          			print('Bastion Host Instance: ' + instanceId)
          			cfnresponse.send(event, context, cfnresponse.SUCCESS, responseData)
          	except Exception as e:
          		logging.error('Exception: %s' % e, exc_info=True)
          		status = cfnresponse.FAILED
          		cfnresponse.send(event, context, status, {}, None)
      Description: Runs Oracle Schema creation SQL script on Bastion host
      MemorySize: 320
      Timeout: 180
      Role: !GetAtt MaximoSSMSendCommandLambdaRole.Arn
  ExecuteRDSObjectsDocument:
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E9101
          ignore_reasons:
            E9101: Execute is part of the resource name
    Type: 'Custom::ExecuteRDSObjectsDocument'
    Version: '1.0'
    Properties:
      ServiceToken: !GetAtt
        - ExecuteRDSSchemasDocumentLambda
        - Arn
      SSMDocument: !Ref RDSSchemasConfigDocument
      BastionASGName: !Ref BastionASGName
      QuickStartLogs: !Ref QuickStartLogs
